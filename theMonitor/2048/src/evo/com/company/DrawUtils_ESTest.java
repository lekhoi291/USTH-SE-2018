/*
 * This file was automatically generated by EvoSuite
 * Tue May 08 15:26:08 GMT 2018
 */

package com.company;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.company.DrawUtils;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics2D;
import java.awt.font.FontRenderContext;
import java.awt.font.LineMetrics;
import java.awt.geom.Rectangle2D;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DrawUtils_ESTest extends DrawUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Font font0 = mock(Font.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(rectangle2D0).getWidth();
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(rectangle2D0).when(fontMetrics0).getStringBounds(anyString() , any(java.awt.Graphics.class));
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontMetrics0).when(graphics2D0).getFontMetrics();
      int int0 = DrawUtils.getMessageWidth("m#ZoL#G})y", font0, graphics2D0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Font font0 = mock(Font.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn(263.28708).when(rectangle2D0).getWidth();
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(rectangle2D0).when(fontMetrics0).getStringBounds(anyString() , any(java.awt.Graphics.class));
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontMetrics0).when(graphics2D0).getFontMetrics();
      int int0 = DrawUtils.getMessageWidth("m#ZoL#G})y", font0, graphics2D0);
      assertEquals(263, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Font font0 = mock(Font.class, new ViolatedAssumptionAnswer());
      Rectangle2D rectangle2D0 = mock(Rectangle2D.class, new ViolatedAssumptionAnswer());
      doReturn((-1.0)).when(rectangle2D0).getWidth();
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn(rectangle2D0).when(fontMetrics0).getStringBounds(anyString() , any(java.awt.Graphics.class));
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontMetrics0).when(graphics2D0).getFontMetrics();
      int int0 = DrawUtils.getMessageWidth("m#ZoL#G})y", font0, graphics2D0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((FontRenderContext) null).when(graphics2D0).getFontRenderContext();
      // Undeclared exception!
      try { 
        DrawUtils.getMessageHeight("Z4hA4", (Font) null, graphics2D0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null font passed to TextLayout constructor.
         //
         verifyException("java.awt.font.TextLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LineMetrics lineMetrics0 = mock(LineMetrics.class, new ViolatedAssumptionAnswer());
      Font font0 = mock(Font.class, new ViolatedAssumptionAnswer());
      doReturn((Map) null).when(font0).getAttributes();
      doReturn(lineMetrics0).when(font0).getLineMetrics(any(char[].class) , anyInt() , anyInt() , any(java.awt.font.FontRenderContext.class));
      doReturn(true).when(font0).hasLayoutAttributes();
      FontRenderContext fontRenderContext0 = mock(FontRenderContext.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontRenderContext0).when(graphics2D0).getFontRenderContext();
      // Undeclared exception!
      try { 
        DrawUtils.getMessageHeight("]W'NmlO2T%:", font0, graphics2D0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Font font0 = mock(Font.class, new ViolatedAssumptionAnswer());
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      int int0 = DrawUtils.getMessageHeight("", font0, graphics2D0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Font font0 = mock(Font.class, new ViolatedAssumptionAnswer());
      doReturn((LineMetrics) null).when(font0).getLineMetrics(any(char[].class) , anyInt() , anyInt() , any(java.awt.font.FontRenderContext.class));
      doReturn(false).when(font0).hasLayoutAttributes();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn((FontRenderContext) null).when(graphics2D0).getFontRenderContext();
      // Undeclared exception!
      try { 
        DrawUtils.getMessageHeight("z-", font0, graphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Font font0 = mock(Font.class, new ViolatedAssumptionAnswer());
      FontMetrics fontMetrics0 = mock(FontMetrics.class, new ViolatedAssumptionAnswer());
      doReturn((Rectangle2D) null).when(fontMetrics0).getStringBounds(anyString() , any(java.awt.Graphics.class));
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(fontMetrics0).when(graphics2D0).getFontMetrics();
      // Undeclared exception!
      try { 
        DrawUtils.getMessageWidth("'!4VX;@:d", font0, graphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.company.DrawUtils", e);
      }
  }
}
